# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11","3.12"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip poetry
        poetry install --with dev
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 iconnmon --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 iconnmon --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Lint with black
      run: |
        # Stop if black would have changed something in the files
        poetry run black --check .
    - name: Test with pytest
      run: |
        poetry run pytest

    services:
      influx:
        image: influxdb:2.7.3
        env:
          DOCKER_INFLUXDB_INIT_MODE: setup
          DOCKER_INFLUXDB_INIT_USERNAME: ${{ secrets.INFLUX_USERNAME }}
          DOCKER_INFLUXDB_INIT_PASSWORD: ${{ secrets.INFLUX_PASSWORD }}
          DOCKER_INFLUXDB_INIT_ORG: iconnmon
          DOCKER_INFLUXDB_INIT_BUCKET: iconnmonseries
          DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${{ secrets.INFLUX_TOKEN }}